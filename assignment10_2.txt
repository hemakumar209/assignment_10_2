1.Use the below given data set
  Ans:
  > df <- read.csv("https://archive.ics.uci.edu/ml/machine- learning databases/00273/Example_Wearable
                    Computing_weight_lifting_exercises_biceps_curl_variations.csv ,header = FALSE)

  >data<-df[-1,]
  >head(data)
  >colnames(data) <- as.character(unlist(data[1,]))
  >data1 = data[-1, ]
  >str(data1)

  >data1<-as.data.frame(lapply(data1, as.integer))
  >table(data1$classe)

  >data1$classe<-as.factor(data1$classe)

  >replacement_vec <- c("A", "B", "C", "D","E")
  >levels(data1$classe) <- replacement_vec

  >head(data1)

  >set.seed(1234)
  >pd<-sample(2,nrow(data1),replace = TRUE,prob = c(0.7,0.3))
  >train<-data1[pd==1,]
  >test<-data1[pd==2,]

Data Set
2. Perform the below given activities:
a. Create classification model using different random forest models
   Ans:

   >library(randomForest)
   >rf<-randomForest(classe~.,data =train)
   >rf

   >library(caret)
   >p1<-predict(rf,train)
   >confusionMatrix(p1,train$classe)
   >p2<-predict(rf,test)
   >confusionMatrix(p2,test$classe)


b. Verify model goodness of fit
   Ans:

 #goodness of fit

   >actual<-table(test$classe)
   >expected<-table(predict(rf,test))
   >chisq.test(actual, p = expected/sum(expected))


c. Apply all the model validation techniques
  Ans:
   #####cross validation

   >control <- trainControl(method = 'repeatedcv',
                                        number = 5,
                                        repeats = 3)

   >set.seed(7)
   >mtry <- sqrt(ncol(train))
   >rf_random <- train(classe~., 
                                data = train,
                                method = 'rf',
                                metric = 'Accuracy',
                                tuneLength = 7,
                                trControl = control)

   >print(rf_random)

   >plot(rf_random)

   >predictions<- predict(rf_random,test)

   >pred<- cbind(test,predictions)
   >confusionMatrix<- confusionMatrix(pred$predictions,pred$classe)


d. Make conclusions
   Ans:
> varImp(rf_random)

   rf variable importance

   only 20 most important variables shown (out of 158)

                     Overall
  raw_timestamp_part_1 100.000
  num_window            98.965
  magnet_dumbbell_y     40.247
  roll_forearm          35.908
  user_name             34.010
  magnet_dumbbell_z     22.303
  magnet_dumbbell_x     18.639
  cvtd_timestamp        14.568
  roll_arm              13.708
  accel_belt_y          10.535
  pitch_belt            10.279
  yaw_belt               9.859
  roll_belt              8.849
  gyros_dumbbell_y       8.049
  gyros_belt_z           7.481
  pitch_forearm          7.194
  gyros_arm_y            6.421
  yaw_dumbbell           5.877
  accel_arm_z            5.280
  magnet_belt_x          3.586

e. Plot importance of variables
  Ans:
   >varImpPlot(rf)
  